TODO:

logout button --
upload files --
data table for battles --
KPIs for loss and win streaks
filtering battles -- (finished initial implementation of defining filters)
apply filters
loading screen --
make variables like hero manager retrievable with redis --
season kpi --
compression for csv files (no longer uploading files)

content manager is inefficient; each variable should be stored separately rather than as...
one object so that they don't need to be deserialized to be accessed -- now stored as global reference, only reset and deserialized after a couple hours to align with chron job

switch reference variables (heroes, users, and seasons, etc) to chron job + initial load with global lookup variable --
switch user manager to DB backend --


# JS Overhaul
switch table and KPI card population to JS --
switch battle-manager, hero-manager, and logic to client side JS using index DB - in progress
switch calculation of metrics to client-side JS
switch filter syntax to client-side JS
swith plotly to client side JS
make server stateless so no need to keep track of session variables or celery task ids (handle everything in client with JS)

BUGS:

plotly line doubles when undocking window and making smaller -> switch to chartsJS -- (not switching, but fixed issue)

app does not handle case when user filters battles and none remain
